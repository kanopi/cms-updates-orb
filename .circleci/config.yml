version: 2.1

validate-steps: &validate-steps
  - run:
      name: Check if PR exists
      command: |
        # Currently just going to test if PR exists and if is currently Open
        gh pr list --head cms-updates/test --json 'number,state,updatedAt' | grep "OPEN"
  - run:
      name: Cleanup and Delete Remote Branch
      command: |
        gh pr close cms-updates/test --delete-branch

orbs:
  cms-updates: kanopi/cms-updates@<<pipeline.parameters.dev-orb-version>>
  ci-tools: kanopi/ci-tools@1.10.0
  orb-tools: circleci/orb-tools@9.0.0
  slack: circleci/slack@3.4.2

# Pipeline Parameters
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      This value is automatically adjusted by the "trigger-integration-tests-workflow" job to correspond with the specific version created by the commit and should not be edited.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

# Jobs
jobs:
  modify-default-value:
    executor: ci-tools/alpine
    steps:
      - attach_workspace:
          at: .
      - ci-tools/install-yq
      - run:
          name: Modify Default Value
          command: |
            VERSION="\"${CIRCLE_SHA1:0:7}\"" yq eval -i '.jobs.run-update.parameters.cms-updates-version.default = env(VERSION)' orb.yml
      - persist_to_workspace:
          root: .
          paths:
            - orb.yml

###########
### Workflows
###########
workflows:
  build_test:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      # Lint yml files to make sure formatted
      - orb-tools/lint

      # Pack Everything in src directory to orb.yml
      - orb-tools/pack

      # Modify the Value of the Current Version
      - modify-default-value:
          requires:
            - orb-tools/pack

      # If is a branch publish dev version
      - orb-tools/publish-dev:
          orb-name: kanopi/cms-updates
          requires:
            - orb-tools/lint
            - modify-default-value

      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  build_deploy:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      - cms-updates/run-update:
          name: "coit-8"
#          executor: cms-updates/pantheon
          cms: "drupal"
          repo: "git@github.com:kanopi/coit-8"
          pr-branch: "master"
          docroot: "web"
          update-branch: "cms-updates/test"
          site-hosting: "pantheon"
          site-id: "coit-main"
          site-env: "live"
          update-method: "composer"
          context: kanopi-code
          post-steps: *validate-steps

#      # If is a release publish version
#      - orb-tools/publish:
#          orb-ref: kanopi/cms-updates@${CIRCLE_TAG}
#          post-steps:
#            - slack/notify:
#                title: "New Version of CMS Updates!!!!"
#                message: "Kanopi CMS Update Orb has published new version: kanopi/cms-updates@${CIRCLE_TAG}"
#                include_visit_job_action: false
#                include_job_number_field: false
#                include_project_field: false
#          filters:
#            tags:
#              only: /[0-9]+\.[0-9]+\.[0-9]+/
#            branches:
#              ignore: /.*/
